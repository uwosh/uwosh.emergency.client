import os

settings_file_name = 'plone-uwosh.emergency.master.conf'

class Recipe(object):
    """
    Recipe to set simple emergency push settings
    """
    def __init__(self, buildout, name, options):
        self.buildout, self.name, self.options = buildout, name, options
        active_parts = [p.strip() for p in self.buildout['buildout']['parts'].split()]
        self.conf_paths = []
        
        for part_name in active_parts:
            part = self.buildout[part_name]
            if not part.has_key('recipe'):
                continue
            elif part['recipe'] in ('plone.recipe.zope2instance'):
                self.conf_paths.append(os.path.join(part['location'], 'etc', settings_file_name))
        
        required_fields = ['trusted_ips']

        if len([f for f in required_fields if f not in options.keys()]) > 0:
            raise Exception("You did not provide all the required settings for the uwosh.emergency.master recipe.  "
                            "Required fields are %s" % required_fields)

    def install(self):
        self.options['trusted_ips'] = ' '.join(self.options['trusted_ips'].splitlines())
        template = ("# master emergency settings\n"
                    "trusted_ips %(ips)s\n")
                    
        for config in self.conf_paths:
            print "writing simple emergency settings for client %s" % config
            fi = open(config, 'w')
            fi.write("# generated by uwosh.emergency.master recipe")
            fi.write(template % self.options)
            fi.close()

        return self.conf_paths

    update = install
